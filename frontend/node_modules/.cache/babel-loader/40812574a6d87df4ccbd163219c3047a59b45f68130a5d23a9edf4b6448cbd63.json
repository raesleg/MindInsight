{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2459n\\\\OneDrive\\\\Documents\\\\Personal\\\\MindInsight\\\\MindInsight\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport 'react-voice-recorder/dist/index.css';\nimport axios from 'axios';\n\n// const assemblyApi = axios.create({\n//   baseURL: 'https://api.assemblyai.com/v2',\n//   headers: {\n//     authorization: process.env.REACT_APP_ASSEMBLY_API_KEY,\n//     'content-type': 'application/json',\n//   },\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  url: null,\n  blob: null,\n  chunks: null,\n  duration: {\n    h: 0,\n    m: 0,\n    s: 0\n  }\n};\nfunction App() {\n  _s();\n  const [audioDetails, setAudioDetails] = useState(initialState);\n  const [transcript, setTranscript] = useState({\n    id: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [sResults, setSResults] = useState([]);\n  const [kResults, setKResults] = useState([]);\n  const [plotUrl, setPlotUrl] = useState('');\n  const handleAudioStop = data => {\n    setAudioDetails(data);\n  };\n  const handleReset = () => {\n    setAudioDetails({\n      ...initialState\n    });\n    setTranscript({\n      id: ''\n    });\n  };\n\n  // const handleAudioUpload = async (audioFile) => {\n  //   setIsLoading(true);\n\n  //   const {data: uploadResponse} = await assemblyApi.post('/upload',audioFile);\n\n  //   const {data} = await assemblyApi.post('/transcript', {\n  //     audio_url: uploadResponse.upload_url,\n  //     sentiment_analysis: true,\n  //     entity_detection: true,\n  //     iab_categories: true,\n  //   });\n\n  //   setTranscript({ id: data.id });\n  // }\n\n  // Using useEffect for single rendering\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/data');\n        const data = await response.json();\n        setTranscript(data.transcript);\n        setSResults(data.s_results);\n        setKResults(data.k_results);\n        setPlotUrl(data.plotUrl);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Transcript: \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sentiment Results:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), sResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Keyword Results:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), kResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plot Image:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: plotUrl,\n      alt: \"Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YFMdivREt0F3hFfwH2vFMpaPcWQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Recorder","axios","jsxDEV","_jsxDEV","initialState","url","blob","chunks","duration","h","m","s","App","_s","audioDetails","setAudioDetails","transcript","setTranscript","id","isLoading","setIsLoading","sResults","setSResults","kResults","setKResults","plotUrl","setPlotUrl","handleAudioStop","data","handleReset","fetchData","response","fetch","json","s_results","k_results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/2459n/OneDrive/Documents/Personal/MindInsight/MindInsight/frontend/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { Recorder } from 'react-voice-recorder';\r\nimport 'react-voice-recorder/dist/index.css';\r\nimport axios from 'axios';\r\n\r\n// const assemblyApi = axios.create({\r\n//   baseURL: 'https://api.assemblyai.com/v2',\r\n//   headers: {\r\n//     authorization: process.env.REACT_APP_ASSEMBLY_API_KEY,\r\n//     'content-type': 'application/json',\r\n//   },\r\n// });\r\n\r\nconst initialState = {\r\n  url: null,\r\n  blob: null,\r\n  chunks: null,\r\n  duration: {\r\n    h:0,\r\n    m:0,\r\n    s:0\r\n  },\r\n}\r\n\r\nfunction App() {\r\n  const [audioDetails, setAudioDetails] = useState(initialState);\r\n  const [transcript, setTranscript] = useState({ id: ''});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sResults, setSResults] = useState([]);\r\n  const [kResults, setKResults] = useState([]);\r\n  const [plotUrl, setPlotUrl] = useState('');\r\n\r\n  const handleAudioStop = (data) => {\r\n    setAudioDetails(data);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setAudioDetails({...initialState});\r\n    setTranscript({ id: ''})\r\n  }\r\n\r\n  // const handleAudioUpload = async (audioFile) => {\r\n  //   setIsLoading(true);\r\n\r\n  //   const {data: uploadResponse} = await assemblyApi.post('/upload',audioFile);\r\n\r\n  //   const {data} = await assemblyApi.post('/transcript', {\r\n  //     audio_url: uploadResponse.upload_url,\r\n  //     sentiment_analysis: true,\r\n  //     entity_detection: true,\r\n  //     iab_categories: true,\r\n  //   });\r\n\r\n  //   setTranscript({ id: data.id });\r\n  // }\r\n\r\n  // Using useEffect for single rendering\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/data');\r\n            const data = await response.json();\r\n\r\n            setTranscript(data.transcript);\r\n            setSResults(data.s_results);\r\n            setKResults(data.k_results);\r\n            setPlotUrl(data.plotUrl);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n}, []);\r\n\r\nreturn (\r\n    <div>\r\n        {/* Render your React components using the state variables */}\r\n        <h1>Transcript: {transcript}</h1>\r\n        <h1>Sentiment Results:</h1>\r\n        {sResults.map((result, index) => (\r\n            <p key={index}>{result}</p>\r\n        ))}\r\n        <h1>Keyword Results:</h1>\r\n        {kResults.map((result, index) => (\r\n            <p key={index}>{result}</p>\r\n        ))}\r\n        <h1>Plot Image:</h1>\r\n        <img src={plotUrl} alt=\"Plot\" />\r\n    </div>\r\n);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAO,qCAAqC;AAC5C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE,IAAI;EACTC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE;IACRC,CAAC,EAAC,CAAC;IACHC,CAAC,EAAC,CAAC;IACHC,CAAC,EAAC;EACJ;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAACM,YAAY,CAAC;EAC9D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,EAAE,EAAE;EAAE,CAAC,CAAC;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM6B,eAAe,GAAIC,IAAI,IAAK;IAChCb,eAAe,CAACa,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBd,eAAe,CAAC;MAAC,GAAGX;IAAY,CAAC,CAAC;IAClCa,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACAnB,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,MAAMJ,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElChB,aAAa,CAACW,IAAI,CAACZ,UAAU,CAAC;QAC9BM,WAAW,CAACM,IAAI,CAACM,SAAS,CAAC;QAC3BV,WAAW,CAACI,IAAI,CAACO,SAAS,CAAC;QAC3BT,UAAU,CAACE,IAAI,CAACH,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDN,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI3B,OAAA;IAAAmC,QAAA,gBAEInC,OAAA;MAAAmC,QAAA,GAAI,cAAY,EAACtB,UAAU;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCvC,OAAA;MAAAmC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BrB,QAAQ,CAACsB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxB1C,OAAA;MAAAmC,QAAA,EAAgBM;IAAM,GAAdC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAC7B,CAAC,eACFvC,OAAA;MAAAmC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxB1C,OAAA;MAAAmC,QAAA,EAAgBM;IAAM,GAAdC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAC7B,CAAC,eACFvC,OAAA;MAAAmC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBvC,OAAA;MAAK2C,GAAG,EAAErB,OAAQ;MAACsB,GAAG,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV;AAAC7B,EAAA,CAnEQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}