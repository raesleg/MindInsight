{"ast":null,"code":"import React__default, { Component } from 'react';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar styles = {\n  \"recorder_library_box\": \"_1ceqH\",\n  \"recorder_box\": \"_2fG9h\",\n  \"recorder_box_inner\": \"_dt3-T\",\n  \"mic_icon\": \"_1dpop\",\n  \"microphone_icon_sec\": \"_3neb0\",\n  \"mic_icon_svg\": \"_3wi1g\",\n  \"reco_header\": \"_1lB9c\",\n  \"h2\": \"_2N9dq\",\n  \"close_icons\": \"_3-aC9\",\n  \"record_section\": \"_3bC73\",\n  \"duration_section\": \"_1YOWG\",\n  \"btn_wrapper\": \"_1Yplu\",\n  \"btn\": \"_1Pz2d\",\n  \"clear_btn\": \"_2gd2_\",\n  \"upload_btn\": \"_37kfa\",\n  \"duration\": \"_f2DT8\",\n  \"recorder_page_box\": \"_17RTH\",\n  \"help\": \"_eV_dK\",\n  \"record_controller\": \"_qxztz\",\n  \"icons\": \"_2uz65\",\n  \"stop\": \"_1bSom\",\n  \"pause\": \"_3nQu5\",\n  \"play_icons\": \"_3O0Io\",\n  \"pause_icons\": \"_2ACrw\",\n  \"stop_icon\": \"_oEOY-\"\n};\nvar audioType = 'audio/*';\nvar Recorder = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Recorder, _Component);\n  function Recorder(props) {\n    var _this;\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = Recorder.prototype;\n  _proto.handleAudioPause = function handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({\n      pauseRecord: true\n    });\n  };\n  _proto.handleAudioStart = function handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({\n      pauseRecord: false\n    });\n  };\n  _proto.startTimer = function startTimer() {\n    this.timer = setInterval(this.countDown, 100);\n  };\n  _proto.countDown = function countDown() {\n    var _this2 = this;\n    this.setState(function (prevState) {\n      var miliseconds = prevState.miliseconds + 100;\n      return {\n        time: _this2.milisecondsToTime(miliseconds),\n        miliseconds: miliseconds\n      };\n    });\n    if (this.props.handleCountDown) {\n      this.props.handleCountDown(this.state.time);\n    }\n  };\n  _proto.milisecondsToTime = function milisecondsToTime(milisecs) {\n    var secs = milisecs / 1000;\n    var hours = Math.floor(secs / (60 * 60));\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n    var obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  };\n  _proto.initRecorder = function initRecorder() {\n    try {\n      var _this4 = this;\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n      var _temp2 = function () {\n        if (navigator.mediaDevices) {\n          return Promise.resolve(navigator.mediaDevices.getUserMedia({\n            audio: true\n          })).then(function (stream) {\n            if (_this4.props.mimeTypeToUseWhenRecording) {\n              _this4.mediaRecorder = new MediaRecorder(stream, {\n                mimeType: _this4.props.mimeTypeToUseWhenRecording\n              });\n            } else {\n              _this4.mediaRecorder = new MediaRecorder(stream);\n            }\n            _this4.chunks = [];\n            _this4.mediaRecorder.ondataavailable = function (e) {\n              if (e.data && e.data.size > 0) {\n                _this4.chunks.push(e.data);\n              }\n            };\n            _this4.stream = stream;\n          });\n        } else {\n          _this4.setState({\n            medianotFound: true\n          });\n          console.log('Media Decives will work only with SSL.....');\n        }\n      }();\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.startRecording = function startRecording(e) {\n    try {\n      var _this6 = this;\n      e.preventDefault();\n      _this6.chunks = [];\n      return Promise.resolve(_this6.initRecorder()).then(function () {\n        _this6.mediaRecorder.start(10);\n        _this6.startTimer();\n        _this6.setState({\n          recording: true\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.stopRecording = function stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({\n      time: {}\n    });\n    e.preventDefault();\n    if (this.stream.getAudioTracks) {\n      var tracks = this.stream.getAudioTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found');\n    }\n    this.mediaRecorder.stop();\n    this.setState({\n      recording: false,\n      pauseRecord: false\n    });\n    this.saveAudio();\n  };\n  _proto.handleReset = function handleReset(e) {\n    var _this7 = this;\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, function () {\n      _this7.props.handleReset(_this7.state);\n    });\n  };\n  _proto.saveAudio = function saveAudio() {\n    var blob = new Blob(this.chunks, {\n      type: audioType\n    });\n    var audioURL = window.URL.createObjectURL(blob);\n    var audios = [audioURL];\n    this.setState({\n      audios: audios,\n      audioBlob: blob\n    });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  };\n  _proto.render = function render() {\n    var _this8 = this;\n    var _this$state = this.state,\n      recording = _this$state.recording,\n      audios = _this$state.audios,\n      time = _this$state.time,\n      medianotFound = _this$state.medianotFound,\n      pauseRecord = _this$state.pauseRecord;\n    var _this$props = this.props,\n      showUIAudio = _this$props.showUIAudio,\n      title = _this$props.title,\n      audioURL = _this$props.audioURL,\n      disableFullUI = _this$props.disableFullUI;\n    if (disableFullUI) {\n      return null;\n    }\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_library_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box_inner\n    }, !this.props.hideHeader ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.reco_header\n    }, /*#__PURE__*/React__default.createElement(\"h2\", {\n      className: styles.h2\n    }, title), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.close_icons\n    })) : null, !medianotFound ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.btn_wrapper\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick() {\n        return _this8.props.handleAudioUpload(_this8.state.audioBlob);\n      },\n      className: styles.btn + \" \" + styles.upload_btn,\n      disabled: this.props.uploadButtonDisabled\n    }, \"Upload\"), /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick(e) {\n        return _this8.handleReset(e);\n      },\n      className: styles.btn + \" \" + styles.clear_btn\n    }, \"Clear\")), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.audio_section\n    }, audioURL !== null && showUIAudio ? /*#__PURE__*/React__default.createElement(\"audio\", {\n      controls: true\n    }, /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/ogg\"\n    }), /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/mpeg\"\n    })) : null), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.mins\n    }, time.m !== undefined ? \"\" + (time.m <= 9 ? '0' + time.m : time.m) : '00'), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.divider\n    }, \":\"), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.secs\n    }, time.s !== undefined ? \"\" + (time.s <= 9 ? '0' + time.s : time.s) : '00')), !recording ? /*#__PURE__*/React__default.createElement(\"p\", {\n      className: styles.help\n    }, \"Press the microphone to record\") : null), !recording ? /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.startRecording(e);\n      },\n      href: \" #\",\n      className: styles.mic_icon\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.microphone_icon_sec\n    }, /*#__PURE__*/React__default.createElement(\"svg\", {\n      className: styles.mic_icon_svg,\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 1000 1000\",\n      enableBackground: \"new 0 0 1000 1000\"\n    }, /*#__PURE__*/React__default.createElement(\"g\", null, /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\"\n    }))))) : /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_controller\n    }, /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.stopRecording(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.stop\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.stop_icon\n    })), /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: !pauseRecord ? function (e) {\n        return _this8.handleAudioPause(e);\n      } : function (e) {\n        return _this8.handleAudioStart(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.pause\n    }, pauseRecord ? /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.play_icons\n    }) : /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.pause_icons\n    })))) : /*#__PURE__*/React__default.createElement(\"p\", {\n      style: {\n        color: '#fff',\n        marginTop: 30,\n        fontSize: 25\n      }\n    }, \"Seems the site is Non-SSL\"))));\n  };\n  return Recorder;\n}(Component);\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: function handleCountDown(data) {}\n};\nexport { Recorder };","map":{"version":3,"names":["audioType","Recorder","_Component","props","_this","call","state","time","miliseconds","recording","medianotFound","audios","audioBlob","stream","timer","startTimer","bind","_assertThisInitialized","countDown","handleAudioPause","e","preventDefault","clearInterval","mediaRecorder","pause","setState","pauseRecord","handleAudioStart","resume","setInterval","_this2","prevState","milisecondsToTime","handleCountDown","milisecs","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","h","m","s","ms","initRecorder","_this4","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","_temp2","mediaDevices","Promise","resolve","audio","then","mimeTypeToUseWhenRecording","MediaRecorder","mimeType","chunks","ondataavailable","data","size","push","console","log","startRecording","_this6","start","stopRecording","getAudioTracks","tracks","forEach","track","stop","saveAudio","handleReset","_this7","blob","Blob","type","audioURL","window","URL","createObjectURL","handleAudioStop","url","duration","render","_this8","_this$state","_this$props","showUIAudio","title","disableFullUI","React__default","createElement","className","styles","recorder_library_box","recorder_box","recorder_box_inner","hideHeader","reco_header","h2","close_icons","record_section","btn_wrapper","onClick","handleAudioUpload","btn","upload_btn","disabled","uploadButtonDisabled","clear_btn","duration_section","audio_section","controls","src","mins","undefined","divider","help","href","mic_icon","microphone_icon_sec","mic_icon_svg","version","xmlns","x","y","viewBox","enableBackground","d","record_controller","icons","stop_icon","play_icons","pause_icons","style","color","marginTop","fontSize","Component","defaultProps"],"sources":["C:\\Users\\2459n\\OneDrive\\Documents\\Personal\\MindInsight\\MindInsight\\frontend\\node_modules\\react-voice-recorder\\src\\components\\Recorder.js"],"sourcesContent":["import React, { Component } from 'react';\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from '../styles.module.css';\nconst audioType = 'audio/*';\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    // if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 100);\n    // }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n\n    this.setState(prevState => {\n      const miliseconds = prevState.miliseconds + 100;\n      return ({ time: this.milisecondsToTime(miliseconds), miliseconds: miliseconds });\n    });\n    \n    if(this.props.handleCountDown){\n      this.props.handleCountDown(this.state.time);\n    }\n    \n  }\n\n  milisecondsToTime(milisecs) {\n\n    let secs = milisecs / 1000;\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  }\n\n  async initRecorder() {\n    navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      if (this.props.mimeTypeToUseWhenRecording) {\n        this.mediaRecorder = new MediaRecorder(stream, { mimeType: this.props.mimeTypeToUseWhenRecording });\n      } else {\n        this.mediaRecorder = new MediaRecorder(stream);\n      }\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      this.stream = stream;\n    } else {\n      this.setState({ medianotFound: true });\n      console.log('Media Decives will work only with SSL.....');\n    }\n  }\n\n  async startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n\n    await this.initRecorder();\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n\n    if (this.stream.getAudioTracks) {\n      const tracks = this.stream.getAudioTracks();\n      tracks.forEach((track) => {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found')\n    }\n\n    this.mediaRecorder.stop();\n\n    // say that we're not recording\n    this.setState({ recording: false, pauseRecord: false, });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleReset(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleReset(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL, disableFullUI } = this.props;\n\n    if (disableFullUI) { return null; }\n\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {\n              !this.props.hideHeader ?\n                <div className={styles.reco_header}>\n                  <h2 className={styles.h2}>{title}</h2>\n                  <span className={styles.close_icons}>\n                  </span>\n                </div> :\n                null\n            }\n            {\n              !medianotFound ?\n                (\n                  <div className={styles.record_section}>\n                    <div className={styles.btn_wrapper}>\n                      <button\n                        onClick={\n                          () =>\n                            this.props.handleAudioUpload(this.state.audioBlob)\n                        }\n                        className={`${styles.btn} ${styles.upload_btn}`}\n                        disabled={this.props.uploadButtonDisabled}\n                      >\n                    Upload\n                      </button>\n                      <button\n                        onClick={(e) => this.handleReset(e)}\n                        className={`${styles.btn} ${styles.clear_btn}`}\n                      >\n                    Clear\n                      </button>\n                    </div>\n                    <div className={styles.duration_section}>\n                      <div className={styles.audio_section}>\n                        {\n                          audioURL !== null && showUIAudio ?\n                            (\n                              <audio controls>\n                                <source src={audios[0]} type='audio/ogg' />\n                                <source src={audios[0]} type='audio/mpeg' />\n                              </audio>\n                            ) :\n                            null\n                        }\n                      </div>\n                      <div className={styles.duration}>\n                        <span className={styles.mins}>\n                          {\n                            time.m !== undefined ?\n                              `${time.m <= 9 ? '0' + time.m : time.m}` :\n                              '00'\n                          }\n                        </span>\n                        <span className={styles.divider}>:</span>\n                        <span className={styles.secs}>\n                          {\n                            time.s !== undefined ?\n                              `${time.s <= 9 ? '0' + time.s : time.s}` :\n                              '00'\n                          }\n                        </span>\n                      </div>\n                      {\n                        !recording ?\n                          (\n                            <p className={styles.help}>Press the microphone to record</p>\n                          ) :\n                          null\n                      }\n                    </div>\n                    {\n                      !recording ?\n                        (\n                          <a\n                            onClick={e => this.startRecording(e)}\n                            href=' #'\n                            className={styles.mic_icon}\n                          >\n                            {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                            <span className={styles.microphone_icon_sec}>\n                              <svg className={styles.mic_icon_svg} version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enableBackground='new 0 0 1000 1000' >\n                                <g>\n                                  <path d='M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z' />\n                                </g>\n                              </svg>\n\n                            </span>\n                          </a>\n                        ) :\n                        (\n                          <div className={styles.record_controller}>\n                            <a\n                              onClick={e => this.stopRecording(e)}\n                              href=' #'\n                              className={`${styles.icons} ${styles.stop}`}\n                            >\n                              <span className={styles.stop_icon}></span>\n                              {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                              {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                            </a>\n                            <a\n                              onClick={\n                                !pauseRecord ?\n                                  e => this.handleAudioPause(e) :\n                                  e => this.handleAudioStart(e)\n                              }\n                              href=' #'\n                              className={`${styles.icons} ${styles.pause}`}\n                            >\n                              {\n                                pauseRecord ?\n                                  <span className={styles.play_icons}></span> :\n                                  <span className={styles.pause_icons}></span>\n                              }\n                            </a>\n                          </div>\n                        )\n                    }\n                  </div>\n                ) :\n                (\n                  <p style={{ color: '#fff', marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                  </p>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: (data) => {},\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}